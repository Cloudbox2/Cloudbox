#########################################################################
# Title:         Saltbox: Docker | Network Tasks                        #
# Author(s):     desimaniac, l3uddz, salty                              #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Network | Get list of docker networks
  shell: docker network ls --format '{{ '{{' }} .Name{{ '}}' }}'
  register: docker_networks_list
  changed_when: false

- name: Network | Get saltbox docker network gateway
  shell: docker network inspect saltbox -f '{{ '{{' }}.EnableIPv6{{ '}}' }}'
  register: docker_ipv6
  when: ('saltbox' in docker_networks_list.stdout_lines)

- name: "Network | Create new IPv6 saltbox docker network block"
  block:

    - name: Create saltbox network
      docker_network:
        name: saltbox
        state: present
        enable_ipv6: true
        ipam_config:
          - subnet: 172.19.0.0/16
          - subnet: fd00:dead:beef::/48

  when: ('saltbox' not in docker_networks_list.stdout_lines) and (dns.ipv6)

- name: "Network | Create new IPv4 saltbox docker network block"
  block:

    - name: Create saltbox network
      docker_network:
        name: saltbox
        state: present
        ipam_config:
          - subnet: 172.19.0.0/16

  when: ('saltbox' not in docker_networks_list.stdout_lines) and (not dns.ipv6)

- name: "Network | Migrating existing saltbox docker network block to IPv6"
  block:

    - name: Network | Get list of containers on saltbox network
      shell: docker ps -a --filter network=saltbox --format '{{ '{{' }}.Names{{ '}}' }}'
      register: docker_containers
      changed_when: false

    - name: Network | Disconnect containers from bridge network
      shell: docker network disconnect -f bridge {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: r
      failed_when: r.rc > 1
      ignore_errors: true

    - name: Network | Rebuild saltbox network
      docker_network:
        name: saltbox
        state: present
        enable_ipv6: true
        ipam_config:
          - subnet: 172.19.0.0/16
          - subnet: fd00:dead:beef::/48

    - name: Network | Connect containers to saltbox network
      shell: docker network connect saltbox {{ item }} --alias {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: q
      failed_when: q.rc > 1
      ignore_errors: true

  when: ('saltbox' in docker_networks_list.stdout_lines) and (docker_ipv6.stdout == 'false') and (dns.ipv6)

- name: "Network | Migrating existing saltbox docker network block to IPv4"
  block:

    - name: Network | Get list of containers on saltbox network
      shell: docker ps -a --filter network=saltbox --format '{{ '{{' }}.Names{{ '}}' }}'
      register: docker_containers
      changed_when: false

    - name: Network | Disconnect containers from bridge network
      shell: docker network disconnect -f bridge {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: r
      failed_when: r.rc > 1
      ignore_errors: true

    - name: Network | Rebuild saltbox network
      docker_network:
        name: saltbox
        state: present
        ipam_config:
          - subnet: 172.19.0.0/16

    - name: Network | Connect containers to saltbox network
      shell: docker network connect saltbox {{ item }} --alias {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: q
      failed_when: q.rc > 1
      ignore_errors: true

  when: ('saltbox' in docker_networks_list.stdout_lines) and (docker_ipv6.stdout == 'true') and (not dns.ipv6)

- name: Unset variables
  set_fact:
    docker_networks_list:
    docker_containers:
