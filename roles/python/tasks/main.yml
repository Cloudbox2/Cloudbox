#########################################################################
# Title:         Saltbox: Python                                        #
# Author(s):     salty                                                  #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Fail if not running Ubuntu 20.04 when installing Python 3.8"
  ansible.builtin.fail:
    msg: "This role is only for Ubuntu 22.04+ when installing Python 3.8"
  when: ansible_distribution_version is version('20.04', '==') and python_version == "3.8"

- name: "Fail if not running Ubuntu 22.04 when installing Python 3.10"
  ansible.builtin.fail:
    msg: "This role is only for Ubuntu 20.04 and 24.04+ when installing Python 3.10"
  when: ansible_distribution_version is version('22.04', '==') and python_version == "3.10"

- name: "Fail if running Ubuntu 24.04 when installing Python 3.12"
  ansible.builtin.fail:
    msg: "This role is only for Ubuntu 20.04 and 22.04 when installing Python 3.12"
  when: ansible_distribution_version is version('24.04', '==') and python_version == "3.12"

- name: Add gpg signing key to trusted.gpg.d
  ansible.builtin.get_url:
    url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xF23C5A6CF475977595C89F51BA6932366A755776
    dest: /etc/apt/trusted.gpg.d/deadsnakes.asc
    mode: "0644"
  register: result
  retries: "{{ '0' if (not continuous_integration) else '5' }}"
  delay: 10
  until: result is succeeded

- name: Remove old repository entry
  ansible.builtin.apt_repository:
    repo: "{{ python_apt_repo_url_old }}"
    filename: "deadsnakes"
    update_cache: true
    state: absent

- name: Add deadsnakes/ppa
  ansible.builtin.apt_repository:
    repo: "{{ python_apt_repo_url }}"
    filename: "deadsnakes"
  register: result
  retries: "{{ '0' if (not continuous_integration) else '5' }}"
  delay: 10
  until: result is succeeded

- name: "Install Python Packages"
  block:
    - name: "Install Python {{ python_version }}"
      ansible.builtin.apt:
        name: "python{{ python_version }}"
        state: present

    - name: "Install Python {{ python_version }} dev"
      ansible.builtin.apt:
        name: "python{{ python_version }}-dev"
        state: present

    - name: "Install Python {{ python_version }} distutils"
      ansible.builtin.apt:
        name: "python{{ python_version }}-distutils"
        state: present

    - name: "Install Python {{ python_version }} venv"
      ansible.builtin.apt:
        name: "python{{ python_version }}-venv"
        state: present

    - name: "Install pip for Python {{ python_version }}"
      ansible.builtin.command: "python{{ python_version }} -m ensurepip"

  rescue:
    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: yes

    - name: "Install Python {{ python_version }}"
      ansible.builtin.apt:
        name: "python{{ python_version }}"
        state: present

    - name: "Install Python {{ python_version }} dev"
      ansible.builtin.apt:
        name: "python{{ python_version }}-dev"
        state: present

    - name: "Install Python {{ python_version }} distutils"
      ansible.builtin.apt:
        name: "python{{ python_version }}-distutils"
        state: present

    - name: "Install Python {{ python_version }} venv"
      ansible.builtin.apt:
        name: "python{{ python_version }}-venv"
        state: present

    - name: "Install pip for Python {{ python_version }}"
      ansible.builtin.command: "python{{ python_version }} -m ensurepip"

- name: Fix System pip
  ansible.builtin.import_tasks: "subtasks/pip.yml"
  when: (not continuous_integration)
