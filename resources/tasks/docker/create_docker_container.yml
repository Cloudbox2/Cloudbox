##################################################################################
# Title:         Saltbox: Resources | Tasks | Docker | Create Docker Container   #
# Author(s):     desimaniac, salty                                               #
# URL:           https://github.com/saltyorg/Saltbox                             #
# --                                                                             #
##################################################################################
#                   GNU General Public License v3.0                              #
##################################################################################
---
- name: Resources | Tasks | Docker | Create Docker Container | Set '_var_prefix' variable
  ansible.builtin.set_fact:
    _var_prefix: "{{ var_prefix
                  if (var_prefix is defined)
                  else role_name }}"

- name: Resources | Tasks | Docker | Create Docker Container | Create Docker Container
  community.docker.docker_container:
    cap_drop: "{{ lookup('vars', _var_prefix + '_docker_cap_drop', default=omit) }}"
    capabilities: "{{ lookup('vars', _var_prefix + '_docker_capabilities', default=omit) }}"
    command: "{{ lookup('vars', _var_prefix + '_docker_commands', default=omit) }}"
    command_handling: compatibility
    container_default_behavior: compatibility
    default_host_ip: ""
    devices: "{{ lookup('vars', _var_prefix + '_docker_devices', default=omit) }}"
    env: "{{ lookup('vars', _var_prefix + '_docker_envs', default=omit) }}"
    env_file: "{{ lookup('vars', _var_prefix + '_docker_env_file', default=omit) }}"
    etc_hosts: "{{ lookup('vars', _var_prefix + '_docker_hosts', default=omit) }}"
    healthcheck: "{{ lookup('vars', _var_prefix + '_docker_healthcheck', default=omit) }}"
    hostname: "{{ lookup('vars', _var_prefix + '_docker_hostname', default=omit)
               if lookup('vars', _var_prefix + '_docker_network_mode', default=docker_networks_name_common) == docker_networks_name_common
               else omit }}"
    image: "{{ lookup('vars', _var_prefix + '_docker_image') }}"
    labels: "{{ lookup('vars', _var_prefix + '_docker_labels', default=omit) }}"
    log_driver: "{{ lookup('vars', _var_prefix + '_docker_log_driver', default=false) | default(docker_log_driver, true) | default(omit) }}"
    log_options: "{{ lookup('vars', _var_prefix + '_docker_log_options', default=false) | default(docker_log_options, true) | default(omit) }}"
    mounts: "{{ lookup('vars', _var_prefix + '_docker_mounts', default=omit) }}"
    name: "{{ lookup('vars', _var_prefix + '_docker_container') }}"
    network_mode: "{{ lookup('vars', _var_prefix + '_docker_network_mode', default=docker_networks_name_common) }}"
    networks: "{{ lookup('vars', _var_prefix + '_docker_networks') }}"
    networks_cli_compatible: true
    pid_mode: "{{ lookup('vars', _var_prefix + '_docker_pid_mode', default=omit) }}"
    privileged: "{{ lookup('vars', _var_prefix + '_docker_privileged', default=omit) }}"
    published_ports: "{{ lookup('vars', _var_prefix + '_docker_ports', default=omit) }}"
    pull: "{{ lookup('vars', _var_prefix + '_docker_image_pull', default='yes') }}"
    purge_networks: true
    restart_policy: "{{ lookup('vars', _var_prefix + '_docker_restart_policy', default='unless-stopped') }}"
    restart_retries: "{{ lookup('vars', _var_prefix + '_docker_restart_retries', default=omit) }}"
    security_opts: "{{ lookup('vars', _var_prefix + '_docker_security_opts', default=omit) }}"
    state: started
    stop_timeout: "{{ lookup('vars', _var_prefix + '_docker_stop_timeout', default='180') }}"
    sysctls: "{{ lookup('vars', _var_prefix + '_docker_sysctls', default=omit) }}"
    tls_hostname: localhost
    user: "{{ lookup('vars', _var_prefix + '_docker_user', default=omit) }}"
    volumes: "{{ (docker_volumes_common + lookup('vars', _var_prefix + '_docker_volumes', default=omit))
              if lookup('vars', _var_prefix + '_docker_volumes_global', default=true)
              else lookup('vars', _var_prefix + '_docker_volumes', default=omit) }}"
  register: result
  retries: "{{ '0' if (not continuous_integration) else '5' }}"
  delay: 10
  until: result is succeeded
